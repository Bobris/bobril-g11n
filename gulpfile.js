var gulp = require('gulp');
var gutil = require('gulp-util');
var fs = require('graceful-fs');
var through2 = require('through2');
var webpack = require("webpack");
var shell = require('gulp-shell');

gulp.task('bump', function(){
  var bump = require('gulp-bump');
  return gulp.src('./package.json')
    .pipe(bump({version: 'minor'}))
    .pipe(gulp.dest('./'));
});

var alltsProjsToCompile = ['./tsconfig.json'];

gulp.task('compilets', function () {
    return gulp.src('./tsconfig.json', { read:false })
	      .pipe(shell('tsc -p <%= file.path %>', { verbose: true }));
});

function bundletest(callback) {
    webpack({
        context: __dirname,
		entry: [
            "./test/msgFormatParserSpec.js",
            "./test/msgFormatterSpec.js",
            "./test/extractUsedParamsSpec.js",
            "./test/translateSpec.js"
        ],
        module: {
          noParse: [/moment.js/]
        },
      	output: {
			path: __dirname + "/testbundle",
			filename: "bundle.js"
		}
    }, function(err, stats) {
        if(err) throw new gutil.PluginError("webpack", err);
        gutil.log("[webpack]", stats.toString({
            // output options
        }));
        callback();
    });
}

gulp.task("webpack", ['compilets'], bundletest);

gulp.task('default', ['webpack']);

// var peg = require('gulp-peg');
// var peg_sources='./src/**/*.pegjs';
// gulp.task('peg', function() {
    // return gulp.src(peg_sources)
        // .pipe(peg().on('error', gutil.log))
        // .pipe(replace(/^[\s\S]*$/, function(text) {
            // var lines=text.split('\n').map(function(l) { return l.substring(2); });
            // lines.splice(0,1,'// AUTOGENERATED! Converted to TypeScript by code in gulpfile.js');
            // lines.splice(lines.length-5,5);
            // return lines.join('\n').replace('function parse(input)','export function parse(input: string): string');
        // }))
        // .pipe(rename(function(p) { p.extname='.ts'; }))
        // .pipe(gulp.dest('./src/'));
// });
